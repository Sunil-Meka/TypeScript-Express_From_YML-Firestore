import { CodegenSchemaPurpose, CodegenSchemaType, CodegenSchemaUsage, CodegenScope } from '@openapi-generator-plus/types';
import { OpenAPIV2, OpenAPIV3 } from 'openapi-types';
import { InternalCodegenState } from '../../types';
import { OpenAPIX } from '../../types/patches';
export declare function discoverCodegenSchemas(specSchemas: OpenAPIV2.DefinitionsObject | Record<string, OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject>, state: InternalCodegenState): void;
export interface SchemaUsageOptions {
    required: boolean;
    suggestedName: string | ((type: CodegenSchemaType) => string);
    nameRequired?: boolean;
    purpose: CodegenSchemaPurpose;
    suggestedScope: CodegenScope | null;
}
export declare function toCodegenSchemaUsage(apiSchema: OpenAPIX.SchemaObject | OpenAPIX.ReferenceObject, state: InternalCodegenState, options: SchemaUsageOptions): CodegenSchemaUsage;
